import math
import shutil

def calculate_velocity(t, freq, amp, vel):
    """Calculate velocity using the expression: vel + (2*pi*freq*amp*sin(2*pi*freq*time))"""
    return vel + (2 * math.pi * freq * amp * math.sin(2 * math.pi * freq * t))

# Parameters
freq = 2  # Hz
amp = 0.002  # m
vel = 0.01   # m/s

# Create the header part of the file
header = """// -*- C++ -*-
// File generated by PyFoam - sorry for the ugliness
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    object      U;
}
dimensions      [0 1 -1 0 0 0 0];
internalField   uniform (0 0 0);
boundaryField
{
    inlet
    {
        type            uniformFixedValue;
        uniformValue    table
        ("""

# Create the footer part of the file
footer = """        );
    }
    outlet
    {
        type            zeroGradient;
    }
    wall
    {
        type            noSlip;
    }
}// ************************************************************************* //"""

# Generate time-velocity pairs
time_vel_pairs = []
for t in range(31):  # 0 to 3 seconds with 0.1s intervals
    t_val = t / 10.0
    vel_val = calculate_velocity(t_val, freq, amp, vel)
    time_vel_pairs.append(f"            ({t_val:.1f}    ({vel_val:.6f} 0 0))")

# Create the complete content
content = header + '\n' + '\n'.join(time_vel_pairs) + '\n' + footer

# Backup original file
shutil.copy('0/U', '0/U.org')

# Write the new content
with open('0/U', 'w') as file:
    file.write(content)

print("U file has been updated and original file backed up as U.org")
